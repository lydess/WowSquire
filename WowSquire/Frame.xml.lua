-- Auto generated by WoWBench 3.0.3.a2 from "C:/Users/light/Documents/AddOn Studio/WowSquire/WowSquire/Frame.xml" on 2024-08-02 14:01:13
local WOWB_XMLFILE="C:/Users/light/Documents/AddOn Studio/WowSquire/WowSquire/Frame.xml";
local WOWB_XMLFILENOPATH="C:/Users/light/Documents/AddOn Studio/WowSquire/WowSquire/Frame.xml";
local WOWB_TAG = { [0]={content=""} }
local WOWB_PARENTOBJECT = WOWB_RootFrame;
local xfpc = WOWB_XMLFileParserContext:New(WOWB_XMLFILE);

do -- <Ui ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1
local WOWB_TAG = { [0]={  xmltag="Ui",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["xmlns:xsd"] ="http://www.w3.org/2001/XMLSchema",
["xmlns:xsi"] ="http://www.w3.org/2001/XMLSchema-instance",
["xmlns"] ="http://www.blizzard.com/wow/ui/",
}};
WOWB_PARENT[0]["Ui"] = WOWB_TAG;
do -- <Script ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=2
local WOWB_TAG = { [0]={  xmltag="Script",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=2,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Frame.lua",
}};
if not WOWB_EXECCOMPILED then
  WOWB_ParseXML_dofile(xfpc, WOWB_TAG[0].file);
end
tinsert(WOWB_PARENT[0], WOWB_TAG);
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end -- Script
do -- <Font ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=3
local WOWB_TAG = { [0]={  xmltag="Font",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=3,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["virtual"] ="true",
["outline"] ="NONE",
}};
if not bIgnored then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass.Font);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if WOWB_PARENTOBJECT then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass.Font);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=4
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=4,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end -- Color
end -- Font
do -- <Scale ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=6
local WOWB_TAG = { [0]={  xmltag="Scale",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=6,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not bIgnored then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass.Scale);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if WOWB_PARENTOBJECT then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass.Scale);

end -- Scale
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=7
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=7,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="Home",
["inherits"] ="BackdropTemplate",
["hidden"] ="true",
["resizable"] ="true",
}};
if not WOWB_ISVIRTUAL then
  local o = WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME);
  if not o then
    bIgnored = true;
  else
    WOWB_TAG = o;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if not bIgnored then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass.Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if WOWB_PARENTOBJECT then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass.Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=8
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=8,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =250,
["y"] =349,
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
end -- Size
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=9
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=9,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not WOWB_PARENT[0]["Anchors"] then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=10
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=10,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =231,
["y"] =-201,
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end -- Anchor
end -- Anchors
do -- <KeyValues ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=12
local WOWB_TAG = { [0]={  xmltag="KeyValues",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=12,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not WOWB_PARENT[0]["KeyValues"] then
  WOWB_PARENT[0]["KeyValues"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["KeyValues"];
end
do -- <KeyValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=13
local WOWB_TAG = { [0]={  xmltag="KeyValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=13,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["key"] ="backdropInfo",
["value"] ="BACKDROP_DIALOG_32_32",
["keyType"] ="string",
["type"] ="global",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end -- KeyValue
end -- KeyValues
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=15
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=15,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not WOWB_PARENT[0]["Layers"] then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=16
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=16,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="OVERLAY",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=17
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=17,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontNormal",
["font"] ="Fonts\\2002.ttf",
["text"] ="This is a thrall, big ass green dude swinging a hammer",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if not bIgnored then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass.FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if WOWB_PARENTOBJECT then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass.FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=18
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=18,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =212,
["y"] =192,
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
end -- Size
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=19
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=19,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not WOWB_PARENT[0]["Anchors"] then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=20
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=20,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =20,
["y"] =-28,
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end -- Anchor
end -- Anchors
end -- FontString
end -- Layer
end -- Layers
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=25
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=25,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not WOWB_PARENT[0]["Frames"] then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=26
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=26,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="button_HIDE",
["inherits"] ="UIPanelButtonTemplate",
["text"] ="Hide",
}};
if not WOWB_ISVIRTUAL then
  local o = WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME);
  if not o then
    bIgnored = true;
  else
    WOWB_TAG = o;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if not bIgnored then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass.Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if WOWB_PARENTOBJECT then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass.Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=27
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=27,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =75,
["y"] =23,
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
end -- Size
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=28
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=28,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not WOWB_PARENT[0]["Anchors"] then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=29
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=29,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =157,
["y"] =-306,
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end -- Anchor
end -- Anchors
end -- Button
end -- Frames
end -- Frame
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=34
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=34,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="eyebutton",
["inherits"] ="UIPanelButtonTemplate",
["text"] ="A",
}};
if not WOWB_ISVIRTUAL then
  local o = WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME);
  if not o then
    bIgnored = true;
  else
    WOWB_TAG = o;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if not bIgnored then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass.Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if WOWB_PARENTOBJECT then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass.Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=35
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=35,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =29,
["y"] =23,
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
end -- Size
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=36
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=36,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if not WOWB_PARENT[0]["Anchors"] then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=37
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=37,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =774,
["y"] =-324,
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end -- Anchor
end -- Anchors
end -- Button
end -- Ui
if not WOWB_TAG[0][WOWB_ROOTXMLTAG] then xfpc:error("No <"..WOWB_ROOTXMLTAG.."> tag?"); end
WOWB_ParseXML_QueueScripts(WOWB_TAG[0][WOWB_ROOTXMLTAG]);

xfpc:Return();
